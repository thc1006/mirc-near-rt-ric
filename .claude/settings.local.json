{
  "permissions": {
    "allow": [
      "Bash(go test:*)",
      "Bash(go tool cover:*)",
      "Bash(npm install:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(make:*)",
      "Bash(go mod:*)",
      "Bash(go build:*)",
      "Bash(npm test)",
      "Bash(powershell:*)",
      "Bash(npm cache clean:*)",
      "Bash(del package-lock.json)",
      "Bash(rm:*)",
      "Bash(npm run build:*)",
      "Bash(ls:*)",
      "Bash(go vet:*)",
      "Bash(npm run lint)",
      "Bash(helm lint:*)",
      "Bash(grep:*)",
      "Bash(npm run lint:*)",
      "Bash(npm audit:*)",
      "Bash(go list:*)",
      "Bash(goimports:*)",
      "Bash(touch:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(curl:*)",
      "Bash(git clone:*)",
      "Bash(cat:*)",
      "Bash(go:*)",
      "Bash(GOROOT=/usr/local/go1.22 go install honnef.co/go/tools/cmd/staticcheck@latest)",
      "Bash(npm ci:*)",
      "Bash(sed:*)",
      "Bash(git push:*)",
      "Bash(diff:*)",
      "Bash(for f in .github/workflows/*.yml .github/workflows/*.yaml)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(head:*)",
      "Bash(echo)",
      "Bash(done)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(./deploy.sh:*)",
      "Bash(test:*)",
      "Bash(docker:*)",
      "Bash(kubectl version:*)",
      "Bash(helm version:*)",
      "Bash(kind version:*)",
      "Bash(tar:*)",
      "Bash(sudo mv:*)",
      "Bash(mv:*)",
      "Bash(export PATH=$HOME/bin:$PATH)",
      "Bash(unzip:*)",
      "Bash(helm.exe version:*)",
      "Bash(kind.exe version:*)",
      "Bash(./deploy-windows.sh:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl patch:*)",
      "Bash(kubectl delete:*)",
      "Bash(kubectl logs:*)",
      "Bash(kubectl apply:*)",
      "Bash(kubectl create configmap:*)",
      "Bash(kubectl:*)",
      "Bash(git ls-tree:*)",
      "Bash(./analyze_stale_files.sh:*)",
      "Bash(rg:*)",
      "Bash(du:*)",
      "Bash(true)",
      "Bash(./scripts/validate-ci.sh:*)"
    ],
    "deny": []
  }
}