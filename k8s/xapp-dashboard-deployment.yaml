apiVersion: v1
kind: Namespace
metadata:
  name: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: xapp-dashboard
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: xapp-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: xapp-dashboard
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/part-of: oran-nearrt-ric
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: xapp-dashboard
        image: oran/xapp-dashboard:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_BASE_URL
          value: "http://kubernetes-dashboard.kubernetes-dashboard:443"
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations: []
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - xapp-dashboard
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: xapp-dashboard
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: xapp-dashboard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: xapp-dashboard-config
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
    }
    
    http {
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
                        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1000;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            application/atom+xml
            application/geo+json
            application/javascript
            application/x-javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rdf+xml
            application/rss+xml
            application/xhtml+xml
            application/xml
            font/eot
            font/otf
            font/ttf
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
            
        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html index.htm;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https: wss:;" always;
            
            # API proxy to main dashboard
            location /api/ {
                proxy_pass http://kubernetes-dashboard.kubernetes-dashboard:443/api/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_ssl_verify off;
            }
            
            # WebSocket support for real-time updates
            location /ws/ {
                proxy_pass http://kubernetes-dashboard.kubernetes-dashboard:443/ws/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_ssl_verify off;
            }
            
            # Static files
            location / {
                try_files $uri $uri/ /index.html;
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Error pages
            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;
            
            location = /50x.html {
                root /usr/share/nginx/html;
            }
        }
    }

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xapp-dashboard-ingress
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: xapp-dashboard.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: xapp-dashboard
            port:
              number: 80

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: xapp-dashboard
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
rules:
# Allow reading xApp resources
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]
# Allow xApp lifecycle management
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "delete", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete", "patch", "update", "scale"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: xapp-dashboard
subjects:
- kind: ServiceAccount
  name: xapp-dashboard
  namespace: xapp-dashboard

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: xapp-dashboard-pdb
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: xapp-dashboard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: xapp-dashboard-hpa
  namespace: xapp-dashboard
  labels:
    app.kubernetes.io/name: xapp-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/part-of: oran-nearrt-ric
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: xapp-dashboard
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80