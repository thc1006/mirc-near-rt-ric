# Package Lock Fix Utility Workflow
name: Fix Package Lock Issues

on:
  workflow_dispatch:
    inputs:
      component:
        description: 'Component to fix (xAPP_dashboard-master, all)'
        required: true
        default: 'xAPP_dashboard-master'
        type: choice
        options:
          - xAPP_dashboard-master
          - all
      force_update:
        description: 'Force update all dependencies'
        required: false
        default: false
        type: boolean

jobs:
  fix-package-locks:
    name: Fix Package Lock Files
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        component: 
          - xAPP_dashboard-master
        exclude:
          - component: xAPP_dashboard-master
        include:
          - component: ${{ github.event.inputs.component == 'all' && 'xAPP_dashboard-master' || github.event.inputs.component }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Fix package lock for component
        working-directory: ${{ matrix.component }}
        run: |
          echo "ðŸ”§ Fixing package lock for ${{ matrix.component }}..."
          
          # Backup current files
          cp package.json package.json.backup || true
          cp package-lock.json package-lock.json.backup || true
          
          # Clean slate approach
          rm -rf node_modules package-lock.json
          
          # Clear npm cache
          npm cache clean --force
          
          # Update dependencies if force_update is true
          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            echo "ðŸ”„ Force updating all dependencies..."
            
            # Update package.json with latest compatible versions
            npx npm-check-updates -u --target minor
          fi
          
          # Regenerate lock file
          npm install --package-lock-only
          
          # Install dependencies
          npm ci --prefer-offline --no-audit --no-fund
          
          # Verify installation
          npm list --depth=0 || echo "Some dependency issues detected"
          
          echo "âœ… Package lock fixed for ${{ matrix.component }}"

      - name: Commit fixes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet; then
            echo "No changes to commit"
          else
            git add ${{ matrix.component }}/package*.json
            git commit -m "fix: regenerate package-lock.json for ${{ matrix.component }}

            - Fixed package.json and package-lock.json synchronization
            - Resolved dependency version conflicts
            - Updated to compatible dependency versions
            
            ðŸ¤– Generated with GitHub Actions"
            
            git push
            echo "âœ… Changes committed and pushed"
          fi

      - name: Create summary
        run: |
          echo "## Package Lock Fix Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Component:** ${{ matrix.component }}" >> $GITHUB_STEP_SUMMARY
          echo "**Force Update:** ${{ github.event.inputs.force_update }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** âœ… Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Changes Made:" >> $GITHUB_STEP_SUMMARY
          echo "- Cleaned node_modules and package-lock.json" >> $GITHUB_STEP_SUMMARY
          echo "- Regenerated package-lock.json from package.json" >> $GITHUB_STEP_SUMMARY
          echo "- Verified dependency installation" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
            echo "- Updated dependencies to latest compatible versions" >> $GITHUB_STEP_SUMMARY
          fi