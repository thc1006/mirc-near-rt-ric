# .github/workflows/ci.yaml
name: Continuous Integration

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Run Go linters
        run: make lint-go
      - name: Run TypeScript linters
        run: make lint-ts

  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        component: ['go', 'ts']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        if: matrix.component == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Set up Node.js
        if: matrix.component == 'ts'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Run tests
        run: make test-${{ matrix.component }}

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        component: ['go', 'ts']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        if: matrix.component == 'go'
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: Set up Node.js
        if: matrix.component == 'ts'
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Build artifacts
        run: make build-${{ matrix.component }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.component }}-build
          path: |
            ${{ matrix.component == 'go' && 'bin' || '' }}
            ${{ matrix.component == 'ts' && 'dashboard-master/dashboard-master/dist' || '' }}
            ${{ matrix.component == 'ts' && 'xAPP_dashboard-master/dist' || '' }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  build-and-push-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push images
        run: make docker-build docker-push
