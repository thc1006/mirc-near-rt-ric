# Copyright 2024 The O-RAN Near-RT RIC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for oran-nearrt-ric.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: {{ .Values.image.repository }}/dashboard
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

flCoordinator:
  enabled: true
  image:
    repository: {{ .Values.image.repository }}/fl-coordinator
    tag: "latest"
    pullPolicy: IfNotPresent
  
mainDashboard:
  enabled: true
  image:
    repository: {{ .Values.image.repository }}/dashboard
    tag: "latest"
    pullPolicy: IfNotPresent

xappDashboard:
  enabled: true
  image:
    repository: {{ .Values.image.repository }}/xapp-dashboard
    tag: "latest"
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# RBAC configuration
rbac:
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: oran-nearrt-ric.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: oran-nearrt-ric-tls
  #    hosts:
  #      - oran-nearrt-ric.local

# O-RAN Near-RT RIC specific configuration
oran:
  namespace: oran-nearrt-ric
  interfaces:
    e2:
      enabled: true
      port: 38000
    a1:
      enabled: true  
      port: 10020
    o1:
      enabled: true
      port: 830

# Redis configuration for FL coordinator
redis:
  enabled: true
  auth:
    enabled: true
    password: {{ randAlphaNum 16 | b64enc | quote }}
  architecture: standalone
  tls:
    enabled: true
    authClients: true

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: {{ randAlphaNum 16 | b64enc | quote }}
    username: "fl_user"
    password: {{ randAlphaNum 16 | b64enc | quote }}
    database: "fl_coordinator"
  tls:
    enabled: true
    certificatesSecret: "postgres-tls"

# Monitoring configuration  
monitoring:
  prometheus:
    enabled: true
  grafana:
    enabled: true

resources:
  limits:
    cpu: 1000m
    memory: 2Gi
  requests:
    cpu: 100m
    memory: 256Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the
  # following lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Security Configuration
security:
  # TLS Configuration
  tls:
    enabled: true
    minVersion: "1.3"
    cipherSuites: []
  
  # Authentication & Authorization
  authentication:
    enabled: true
    type: "jwt" # jwt, oauth2, cert
    jwtExpiry: "24h"
    sessionTimeout: "30m"
  
  authorization:
    enabled: true
    rbac:
      enabled: true
    
  # Network Policies
  networkPolicy:
    enabled: true
    ingress:
      - from:
        - namespaceSelector:
            matchLabels:
              name: oran-nearrt-ric
        ports:
        - protocol: TCP
          port: 8080
        - protocol: SCTP
          port: 36421
    egress:
      - {}
  
  # Pod Security Policy
  podSecurityPolicy:
    enabled: true
    name: "oran-nearrt-ric-psp"
    
  # Service Mesh (Istio)
  serviceMesh:
    enabled: false
    mtls: "STRICT"
    
  # Secrets Management
  secrets:
    # External secret management (e.g., Vault, AWS Secrets Manager)
    external:
      enabled: false
      provider: "vault" # vault, aws, azure, gcp
      
  
  
  # Audit Logging
  audit:
    enabled: true
    level: "RequestResponse"
    
  # Input Validation
  validation:
    enabled: true
    maxRequestSize: "10Mi"
    
  # Rate Limiting
  rateLimiting:
    enabled: true
    requestsPerMinute: 1000
