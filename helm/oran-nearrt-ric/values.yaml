# Copyright 2024 The O-RAN Near-RT RIC Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Global configuration
global:
  # Image registry
  imageRegistry: "oran"
  
  # Image pull secrets
  imagePullSecrets: []
  
  # Storage class for persistent volumes
  storageClass: "standard"
  
  # O-RAN specific configuration
  oran:
    plmnId: "310410"
    domain: "oran.local"
    
    # Interface configurations
    e2:
      port: 36421
      protocol: sctp
    a1:
      port: 10020
      protocol: https
    o1:
      port: 830
      protocol: netconf-tls

# Main Dashboard
mainDashboard:
  enabled: true
  replicaCount: 1
  image:
    repository: "main-dashboard"
    tag: "1.0.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 443
    targetPort: 8443
  
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/auth-tls-secret: "oran-nearrt-ric/ca-secret"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    hosts:
      - host: "dashboard.oran.local"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: "dashboard-tls-secret"
        hosts:
          - "dashboard.oran.local"
          
  securityContext:
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
    readOnlyRootFilesystem: true
    
  podSecurityContext:
    seccompProfile:
      type: "RuntimeDefault"
      
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# xApp Dashboard
xappDashboard:
  enabled: true
  replicaCount: 1
  image:
    repository: "xapp-dashboard"
    tag: "1.0.0"
    pullPolicy: IfNotPresent
    
  service:
    type: ClusterIP
    port: 443
    targetPort: 4200
    
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      nginx.ingress.kubernetes.io/auth-tls-secret: "oran-nearrt-ric/ca-secret"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    hosts:
      - host: "xapp.oran.local"
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: "xapp-dashboard-tls-secret"
        hosts:
          - "xapp.oran.local"
          
  securityContext:
    runAsNonRoot: true
    runAsUser: 1002
    runAsGroup: 1002
    fsGroup: 1002
    readOnlyRootFilesystem: true
    
  podSecurityContext:
    seccompProfile:
      type: "RuntimeDefault"
      
  resources:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "250m"
      memory: "256Mi"

# O-RAN Interfaces
oranInterfaces:
  e2:
    enabled: true
    security:
      sctpAuth:
        enabled: true
        secretName: "e2-sctp-auth-secret"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "250m"
        memory: "256Mi"
    securityContext:
      runAsNonRoot: true
      runAsUser: 1003
      runAsGroup: 1003
      fsGroup: 1003
      readOnlyRootFilesystem: true
  a1:
    enabled: true
    security:
      authentication:
        enabled: true
        tokenSecretName: "a1-jwt-secret"
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "250m"
        memory: "256Mi"
    securityContext:
      runAsNonRoot: true
      runAsUser: 1004
      runAsGroup: 1004
      fsGroup: 1004
      readOnlyRootFilesystem: true
  o1:
    enabled: true
    security:
      accessControls:
        enabled: true
        allowedSubnets: ["10.0.0.0/8"]
    resources:
      requests:
        cpu: "100m"
        memory: "128Mi"
      limits:
        cpu: "250m"
        memory: "256Mi"
    securityContext:
      runAsNonRoot: true
      runAsUser: 1005
      runAsGroup: 1005
      fsGroup: 1005
      readOnlyRootFilesystem: true
        
# Certificate Management
certs:
  autoGenerate: true
  caSecretName: "ca-secret"
  tlsSecretName: "tls-secret"
  
# Network Policies
networkPolicies:
  enabled: true
  spec:
    podSelector: {}
    ingress:
    - from:
      - podSelector:
          matchLabels:
            app.kubernetes.io/name: oran-nearrt-ric

# RBAC
rbac:
  create: true
  serviceAccount:
    create: true
    name: "oran-nearrt-ric"
    
# Monitoring
monitoring:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
    adminPassword: "{{ randAlphaNum 16 }}"
    
# Dependencies
redis:
  enabled: true
  auth:
    enabled: true
    password: "{{ randAlphaNum 16 }}"
    
postgresql:
  enabled: true
  auth:
    database: "oran_db"
    username: "oran_user"
    password: "{{ randAlphaNum 16 }}"
