# Main Dashboard Deployment
{{- if .Values.mainDashboard.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oran-nearrt-ric.fullname" . }}-main-dashboard
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oran-nearrt-ric.labels" . | nindent 4 }}
    app.kubernetes.io/component: main-dashboard
spec:
  replicas: {{ .Values.mainDashboard.replicaCount }}
  selector:
    matchLabels:
      {{- include "oran-nearrt-ric.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: main-dashboard
  template:
    metadata:
      labels:
        {{- include "oran-nearrt-ric.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: main-dashboard
    spec:
      serviceAccountName: {{ include "oran-nearrt-ric.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.mainDashboard.podSecurityContext | nindent 8 }}
      containers:
        - name: main-dashboard
          securityContext:
            {{- toYaml .Values.mainDashboard.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.mainDashboard.image.repository }}:{{ .Values.mainDashboard.image.tag }}"
          imagePullPolicy: {{ .Values.mainDashboard.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.mainDashboard.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml .Values.mainDashboard.resources | nindent 12 }}
          volumeMounts:
            - name: certs
              mountPath: /certs
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: certs
          secret:
            secretName: {{ .Values.certs.tlsSecretName }}
        - name: tmp
          emptyDir: {}
{{- end }}

---
# xApp Dashboard Deployment
{{- if .Values.xappDashboard.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oran-nearrt-ric.fullname" . }}-xapp-dashboard
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oran-nearrt-ric.labels" . | nindent 4 }}
    app.kubernetes.io/component: xapp-dashboard
spec:
  replicas: {{ .Values.xappDashboard.replicaCount }}
  selector:
    matchLabels:
      {{- include "oran-nearrt-ric.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: xapp-dashboard
  template:
    metadata:
      labels:
        {{- include "oran-nearrt-ric.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: xapp-dashboard
    spec:
      serviceAccountName: {{ include "oran-nearrt-ric.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.xappDashboard.podSecurityContext | nindent 8 }}
      containers:
        - name: xapp-dashboard
          securityContext:
            {{- toYaml .Values.xappDashboard.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.xappDashboard.image.repository }}:{{ .Values.xappDashboard.image.tag }}"
          imagePullPolicy: {{ .Values.xappDashboard.image.pullPolicy }}
          ports:
            - name: https
              containerPort: {{ .Values.xappDashboard.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /
              port: https
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml .Values.xappDashboard.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
{{- end }}
